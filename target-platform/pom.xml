<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.jboss.tools.integration-stack</groupId>
  <artifactId>target-platform</artifactId>
  <version>4.2.0.Alpha7-SNAPSHOT</version>

  <name>JBoss Tools Integration Stack Target Platform</name>
  <description>
    JBoss Tools integration stack component target dependencies + JBoss Tools core target dependencies +
    JBoss Tools target platform (jbosstools-multiple) dependencies forms an 'jbds-is.target' combined target.

    Then add any leftover community dependencies to the aggregate to form an jbt-is.target.
  </description>

  <packaging>pom</packaging>

  <!-- JBoss parent POM required for nexus deployment. -->
  <parent>
    <groupId>org.jboss</groupId>
    <artifactId>jboss-parent</artifactId>
    <version>10</version>
  </parent>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <tychoVersion>0.21.0</tychoVersion>
    <tychoExtrasVersion>${tychoVersion}</tychoExtrasVersion>
    <jboss-tycho-version>0.21.0</jboss-tycho-version>
    <JBTCoreTPVersion>4.40.0.CR1-SNAPSHOT</JBTCoreTPVersion>
  </properties>

  <repositories>

    <repository>
      <id>jboss-snapshots-repository</id>
      <name>JBoss Snapshots Repository</name>
      <url>https://repository.jboss.org/nexus/content/repositories/snapshots/</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>

    <repository>
      <id>jboss-releases</id>
      <name>JBoss Releases Maven Repository</name>
      <url>https://repository.jboss.org/nexus/content/repositories/releases/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
    </repository>

    <repository>
      <id>jboss-public-repository-group</id>
      <name>JBoss Public Maven Repository Group</name>
      <url>https://repository.jboss.org/nexus/content/groups/public/</url>
      <layout>default</layout>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>never</updatePolicy>
      </releases>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>never</updatePolicy>
      </snapshots>
    </repository>

  </repositories>

  <pluginRepositories>

    <pluginRepository>
      <id>jboss-public-repository-group</id>
      <name>JBoss Public Repository Group</name>
      <url>http://repository.jboss.org/nexus/content/groups/public/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </pluginRepository>

  </pluginRepositories>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-plugin-plugin</artifactId>
        <version>2.5.1</version><!-- same version as build plugin -->
        <reportSets>
          <reportSet>
            <reports>
              <report>report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>

  <build>
    <plugins>

      <!-- this execution just copies the jbds-is.target into the target/ folder for convenience -->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.6</version>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>validate</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}</outputDirectory>
              <resources>          
                <resource>
                  <directory>${basedir}</directory>
                  <includes>
                    <include>jbds-is.target</include>
                  </includes>
                </resource>
              </resources>              
            </configuration>            
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.eclipse.tycho</groupId>
        <artifactId>tycho-maven-plugin</artifactId>
        <version>${tychoVersion}</version>
        <extensions>true</extensions>
      </plugin>
      <plugin>
        <groupId>org.jboss.tools.tycho-plugins</groupId>
        <artifactId>target-platform-utils</artifactId>
        <version>${jboss-tycho-version}</version>

        <executions>
          <!-- Merge:
               1. the integration-stack specific target dependencies:  jbds-is.target
               2. the JBoss Tools core target dependencies:          + core-base.target
               3. the JBoss Tools TP target dependencies (upstream): + jbosstools-multiple....target
                                                                       _____________________________
               to generate the FULL JBDS-IS target dependencies file:  jbds-is-full.target
            -->
          <execution>
            <id>merge-jbds-is-full</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>merge-targets</goal>
            </goals>
            <configuration>
              <sourceTargetArtifacts>
                <item>
                  <groupId>org.jboss.tools.targetplatforms</groupId>
                  <artifactId>jbosstools-multiple</artifactId>
                  <version>${JBTCoreTPVersion}</version>
                  <classifier>jbosstools-multiple</classifier>
                </item>
              </sourceTargetArtifacts>
              <sourceTargetFiles>
                <item>${basedir}/jbds-is.target</item>
                <item>${basedir}/core-base.target</item>
              </sourceTargetFiles>
              <outputFile>${project.build.directory}/jbds-is-full.target</outputFile>
            </configuration>
          </execution>

          <!-- Merge:
               1. the integration-stack specific target dependencies: jbds-is.target
               2. the community-specific target dependencies:       + community.target
                                                                      _____________________
               to generate the JBT-IS target dependencies file:       jbt-is.target
            -->
          <execution>
            <id>merge-jbt-is</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>merge-targets</goal>
            </goals>
            <configuration>
              <sourceTargetFiles>
                <item>${basedir}/jbds-is.target</item>
                <item>${basedir}/community.target</item>
              </sourceTargetFiles>
              <outputFile>${project.build.directory}/jbt-is.target</outputFile>
            </configuration>
          </execution>

          <!-- Merge:
               1. the previously generated aggregate base target file: jbds-is-full.target
               2. the community-specific target dependencies:        + community.target
                                                                       _____________________
               to generate the FULL JBT-IS target dependencies file:   jbt-is-full.target
            -->
          <execution>
            <id>merge-jbt-is-full</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>merge-targets</goal>
            </goals>
            <configuration>
              <sourceTargetFiles>
                <item>${basedir}/community.target</item>
                <item>${project.build.directory}/jbds-is-full.target</item>
              </sourceTargetFiles>
              <outputFile>${project.build.directory}/jbt-is-full.target</outputFile>
            </configuration>
          </execution>

        </executions>
      </plugin>

      <plugin>
        <groupId>org.eclipse.tycho.extras</groupId>
        <artifactId>target-platform-validation-plugin</artifactId>
        <version>${tychoExtrasVersion}</version>

        <executions>
          <execution>

            <!--Validate the aggregated target dependencies - use the FULL target platform files in order to ensure all dependencies are found. -->
            <phase>verify</phase>
            <goals>
              <goal>validate-target-platform</goal>
            </goals>

            <configuration>

              <targetFiles>
                <param>${project.build.directory}/jbds-is-full.target</param>
                <param>${project.build.directory}/jbt-is-full.target</param>
              </targetFiles>
              <failOnError>true</failOnError>

            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Use the codehaus mojo to package the aggegated target dependencies (jbds-is (base) and jbt-is (community)). -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.3</version>

        <executions>
          <execution>
            <id>attach-artifacts</id>
            <phase>package</phase>
            <goals>
              <goal>attach-artifact</goal>
            </goals>

            <configuration>
              <tasks>
                <echo>Package the target files.</echo>
              </tasks>
              <artifacts>
                <artifact>
                  <file>${basedir}/jbds-is.target</file>
                  <type>target</type>
                  <classifier>jbds-is</classifier>
                </artifact>
                <artifact>
                  <file>${project.build.directory}/jbds-is-full.target</file>
                  <type>target</type>
                  <classifier>jbds-is-full</classifier>
                </artifact>
                <artifact>
                  <file>${project.build.directory}/jbt-is.target</file>
                  <type>target</type>
                  <classifier>jbt-is</classifier>
                </artifact>
                <artifact>
                  <file>${project.build.directory}/jbt-is-full.target</file>
                  <type>target</type>
                  <classifier>jbt-is-full</classifier>
                </artifact>
              </artifacts>
            </configuration>
          </execution>

        </executions>
      </plugin>

    </plugins>
  </build>

  <!-- Mirror just the jbt-is target dependencies (superset of jbds-is dependencies).  This will be used by the production build as an extra repo.  -->
  <profiles>
    <profile>
      <id>isbtp2repo</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>

      <build>
        <plugins>

          <plugin>
            <groupId>org.jboss.tools.tycho-plugins</groupId>
            <artifactId>target-platform-utils</artifactId>
            <version>${jboss-tycho-version}</version>

            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>mirror-target-to-repo</goal>
                </goals>
                <configuration>
                  <!-- Using Tycho 0.21.0, must resolve jbt-is.target, not jbds-is.target, or build fails due to missing deps; make sure you've run this to update to latest IU versions first (see README.update.txt)!

for tf in *.target; do 
  mvn -U org.jboss.tools.tycho-plugins:target-platform-utils:0.21.0-SNAPSHOT:fix-versions -DtargetFile=${tf}
  if [[ -f ${tf}_fixedVersion.target ]]; then rm -f ${tf} *_update_hints.txt; mv -f ${tf}{_fixedVersion.target,}; fi
done
                -->
                  <sourceTargetFile>${project.build.directory}/jbt-is.target</sourceTargetFile>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.7</version>

            <executions>
              <execution>
                <phase>package</phase>

                <configuration>
                  <quiet>true</quiet>
                  <target>
                    <!-- ANT script to remove the <references> section from the mirror repo content.xml. -->
                    <ant antfile="../scripts/remove.references.xml" dir=".">
                      <property name="workDir" value="./target/target-platform.target.repo" />
                    </ant>
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>

            <dependencies>
              <dependency>
                <groupId>commons-net</groupId>
                <artifactId>commons-net</artifactId>
                <version>1.4.1</version>
              </dependency>
              <dependency>
                <groupId>org.apache.ant</groupId>
                <artifactId>ant</artifactId>
                <version>1.8.2</version>
              </dependency>
              <dependency>
                <groupId>org.apache.ant</groupId>
                <artifactId>ant-nodeps</artifactId>
                <version>1.8.1</version>
              </dependency>
              <dependency>
                <groupId>org.apache.ant</groupId>
                <artifactId>ant-trax</artifactId>
                <version>1.8.0</version>
              </dependency>
              <dependency>
                <groupId>org.apache.ant</groupId>
                <artifactId>ant-commons-net</artifactId>
                <version>1.8.2</version>
              </dependency>
              <dependency>
                <groupId>org.apache.ant</groupId>
                <artifactId>ant-apache-regexp</artifactId>
                <version>1.8.2</version>
              </dependency>
            </dependencies>

          </plugin>
        </plugins>

      </build>
    </profile>
  </profiles>

</project>
