<?xml version="1.0" encoding="UTF-8"?>
<!--
   Create a mylyn-style directory XML file which identifies the Integration Stack central discovery plugin.
   This build infrastructure is for testing purposes only.
-->
<project default="basic.build" name="discovery site builder">
  <!--
     To test output, run maven in this folder:

     $ mvn clean install -DPREFIX=jbosstools-integration-stack -DVERSION=4.0.0 -DBUILD_TYPE=integration -DBUILD_TS=v20130212-1234 \
         -DBUILD_NUMBER=23 -DBUILD_ALIAS=integration -DTARGET_PLATFORM=juno -DBUILD_FORM=production
         -DUPSTREAM_DIRECTORY_XML=http://path/to/jbosstools-or-devstudio-directory.xml
	       -DCOMPOSITE_URLS=http://1,http://2,http://3,http://4
    -->
	<!-- from Maven, pass in a comma-separated list of URLs to include in a composite site. Should be:
	 JBT,JBT TP,JBT-IS,JBT-IS TP, or
	 JBDS,JBDS TP,JBDS-IS,JBDS-IS TP 
	-->
	<property name="COMPOSITE_URLS" value=""/>

  <condition property="output.dir" value="${WORKSPACE}/results" else="${basedir}">
    <available file="${WORKSPACE}/results" />
  </condition>

  <condition property="COMMON_TOOLS" value="/home/hudson/static_build_env/jbds/tools" else="${java.io.tmpdir}">
    <available file="/home/hudson/static_build_env/jbds" type="dir" />
  </condition>

  <mkdir dir="${COMMON_TOOLS}" />

  <tempfile property="tmpdir" destDir="${java.io.tmpdir}" prefix="aggregate-site-build"/>
  <mkdir dir="${tmpdir}" />

  <property name="project.build.directory" value="${output.dir}/target"/>
  <!-- this will either be the JBT or JBDS discovery site's directory.xml file 
    https://devstudio.jboss.com/updates/7.0/devstudio-directory.xml
    https://devstudio.jboss.com/updates/7.0-development/devstudio-directory.xml
    http://download.jboss.org/jbosstools/updates/stable/kepler/jbosstools-directory.xml
    http://download.jboss.org/jbosstools/updates/development/kepler/jbosstools-directory.xml
    etc.
  -->
  <property name="UPSTREAM_DIRECTORY_XML" value="http://download.jboss.org/jbosstools/updates/stable/kepler/jbosstools-directory.xml"/>

  <target name="init">
    <echo level="verbose">
This script requires Ant 1.8+ and JDK 1.6+.
-------------------------------------------
$ant.version = ${ant.version}
$ant.home = ${ant.home}
$ant.java.version = ${ant.java.version}
$java.home = ${java.home}
    </echo>

    <available file="${COMMON_TOOLS}/ant-contrib.jar" type="file" property="ant-contrib.jar.exists" />
    <antcall target="get.ant-contrib" />
    <taskdef resource="net/sf/antcontrib/antlib.xml">
      <classpath>
	<pathelement location="${COMMON_TOOLS}/ant-contrib.jar" />
      </classpath>
    </taskdef>
  </target>

  <!-- Initialize, generate the *directory.xml, cleanup. -->
  <target name="basic.build" description="discovery plugin build extra processing steps" depends="init,generate.directory.xml,generate.composite.site,cleanup" />

  <target name="get.ant-contrib" unless="ant-contrib.jar.exists">
    <property name="ANTCONTRIB_MIRROR" value="http://sourceforge.net/projects/ant-contrib/files/ant-contrib/ant-contrib-1.0b2" />
    <get usetimestamp="true" dest="${COMMON_TOOLS}/ant-contrib-1.0b2-bin.zip" src="${ANTCONTRIB_MIRROR}/ant-contrib-1.0b2-bin.zip" />
    <touch file="${COMMON_TOOLS}/ant-contrib-1.0b2-bin.zip" />
    <mkdir dir="${tmpdir}/ant-contrib-1.0b2-bin.zip_" />
    <unzip src="${COMMON_TOOLS}/ant-contrib-1.0b2-bin.zip" dest="${tmpdir}/ant-contrib-1.0b2-bin.zip_" overwrite="true" />
    <copy file="${tmpdir}/ant-contrib-1.0b2-bin.zip_/ant-contrib/lib/ant-contrib.jar" tofile="${COMMON_TOOLS}/ant-contrib.jar" failonerror="true" />
    <delete dir="${tmpdir}/ant-contrib-1.0b2-bin.zip_" includeemptydirs="true" quiet="true" />
  </target>

	<target name="generate.composite.site">
		<condition property="compositeName" 
			value="JBoss Developer Studio Integration Stack Central - composite staging site" 
			 else="JBoss Tools Integration Stack Central - composite staging site">
			<equals arg1="${BUILD_FORM}" arg2="production"/>
		</condition>

		<script language="javascript">
		<![CDATA[
		  property = project.setProperty("now",Math.floor((new Date()).getTime()));
		]]>
		</script>

		<mkdir dir="${project.build.directory}/discovery-site/"/>

    <for list="${COMPOSITE_URLS}" param="cURL" delimiter=", 
">
      <sequential>
        <echo>Add: @{cURL}</echo>
      </sequential>
    </for>

		<antcall target="generate.composite.xml.file">
			<param name="compositeName" value="${compositeName}"/>
			<param name="COMPOSITE_URLS" value="${COMPOSITE_URLS}"/>
			<param name="compositeType" value="org.eclipse.equinox.internal.p2.metadata.repository.CompositeMetadataRepository"/>
			<param name="compositeClass" value="compositeMetadataRepository"/>
			<param name="compositeFile" value="${project.build.directory}/discovery-site/compositeContent.xml"/>
		</antcall>
		<antcall target="generate.composite.xml.file">
			<param name="compositeName" value="${compositeName}"/>
			<param name="COMPOSITE_URLS" value="${COMPOSITE_URLS}"/>
			<param name="compositeType" value="org.eclipse.equinox.internal.p2.artifact.repository.CompositeArtifactRepository"/>
			<param name="compositeClass" value="compositeArtifactRepository"/>
			<param name="compositeFile" value="${project.build.directory}/discovery-site/compositeArtifacts.xml"/>
		</antcall>
	</target>

	<target name="generate.composite.xml.file">
		<!-- fileType is either org.eclipse.equinox.internal.p2.metadata.repository.CompositeMetadataRepository or org.eclipse.equinox.internal.p2.artifact.repository.CompositeArtifactRepository -->
		<property name="compositeName" value="JBoss Tools Integration Stack Central - composite staging site"/>
		<property name="COMPOSITE_URLS" value="http://1,http://2,http://3,http://4"/>
		<property name="compositeType" value="org.eclipse.equinox.internal.p2.artifact.repository.CompositeArtifactRepository"/>
		<property name="compositeClass" value="compositeArtifactRepository"/>
		<property name="compositeFile" value="${project.build.directory}/discovery-site/compositeArtifacts.xml"/>

    <echo file="${compositeFile}">&lt;?xml version='1.0' encoding='UTF-8'?&gt;
&lt;?${compositeClass} version='1.0.0'?&gt;
&lt;repository name='${compositeName}' type='${compositeType}' version='1.0.0'&gt;
  &lt;properties size='2'&gt;
    &lt;property name='p2.timestamp' value='${now}'/&gt;
    &lt;property name='p2.compressed' value='true'/&gt;
  &lt;/properties&gt;
</echo>
		<var name="compositeURLCount" value="0"/>
		<for list="${COMPOSITE_URLS}" param="cURL" delimiter=", 
">
		  <sequential>
		    <math result="compositeURLCount" operand1="${compositeURLCount}" operation="+" operand2="1" datatype="int" />
		  </sequential>
		</for>
		<echo file="${compositeFile}" append="true">  &lt;children size='${compositeURLCount}'&gt;
</echo>
		<for list="${COMPOSITE_URLS}" param="cURL" delimiter=", 
">
		  <sequential>
		    <echo file="${compositeFile}" append="true">  	&lt;child location='@{cURL}'/&gt;
</echo>
		  </sequential>
		</for>
		<echo file="${compositeFile}" append="true">  &lt;/children&gt;
&lt;/repository&gt;</echo>
    <echo level="verbose">Created: ${compositeFile}</echo>
	</target>

  <target name="generate.directory.xml">
    <echo level="debug">project.build.directory = ${project.build.directory}</echo>

    <!-- Extract the file name matching the integration stack discovery jar (i.e) org.jboss.tools.central.discovery.integration-stack_4.0.0.integration-v20130212-1334-B99.jar -->
    <if><equals arg1="${BUILD_FORM}" arg2="community" trim="true" /><then>
	<property name="central.discovery.is.jar.id" value="org.jboss.tools.central.discovery.integration-stack-${VERSION}-SNAPSHOT.jar" />
	<property name="discovery_jar_target_dir" value="${project.build.directory}/../../org.jboss.tools.central.discovery.integration-stack/target/" />
	<property name="output.url" value="http://download.jboss.org/jbosstools/discovery/${BUILD_TYPE}/integration-stack/${VERSION}/" />
    </then></if>

    <if><equals arg1="${BUILD_FORM}" arg2="production" trim="true" /><then>
	<property name="central.discovery.is.jar.id" value="com.jboss.jbds.central.discovery.integration-stack-${VERSION}-SNAPSHOT.jar" />
	<property name="discovery_jar_target_dir" value="${project.build.directory}/../../com.jboss.jbds.central.discovery.integration-stack/target/" />
	<property name="output.url" value="https://devstudio.jboss.com/updates/${BUILD_TYPE}/central/integration-stack/${VERSION}/" />
    </then></if>

    <path id="central.discovery.is.jar.id">
	  <fileset dir="${discovery_jar_target_dir}">
	    <include name="*.central.discovery*.jar" />
	    <exclude name="*-sources.jar" />
	  </fileset>
    </path>

    <property name="central.discovery.is.path" refid="central.discovery.is.jar.id" />
    <echo level="debug">central.discovery.is.path = ${central.discovery.is.path}</echo>
    <basename property="central.discovery.is.jar" file="${central.discovery.is.path}" />

    <if><not><equals arg1="${central.discovery.is.jar}" arg2="" trim="true" /></not><then>
	<propertyregex override="true" property="BUILD_TS" defaultvalue="${BUILD_TS}" input="${BUILD_ID}" regexp="([0-9]+)-([0-9]+)-([0-9]+)_([0-9]+)-([0-9]+)-([0-9]+)" replace="v\1\2\3-\4\5" />
	<mkdir dir="${project.build.directory}/plugins"/>

	<!-- Rename and copy the integration stack discovery jar. -->
	<propertyregex override="true" property="central.discovery.is.jar.renamed" defaultvalue="${central.discovery.is.jar}" input="${central.discovery.is.jar}" 
		       regexp="-[0-9.]+-SNAPSHOT" replace="_${VERSION}.${BUILD_ALIAS}-${BUILD_TS}-B${BUILD_NUMBER}"/>
	<copy file="${central.discovery.is.path}" tofile="${project.build.directory}/plugins/${central.discovery.is.jar.renamed}"/>
	<echo level="verbose">Generate ${project.build.directory}/${PREFIX}-directory.xml pointing at discovery jar: ${project.build.directory}/plugins/${central.discovery.is.jar.renamed}</echo>

	<!-- Extract the core central discovery jar from the stable JBoss tools directory XML file. -->
	<property name="CORE_JBOSSTOOLS_TEMP_DIR" value="${tmpdir}/jbosstools-directory" />
	<mkdir dir="${CORE_JBOSSTOOLS_TEMP_DIR}" />
	<get usetimestamp="true" dest="${CORE_JBOSSTOOLS_TEMP_DIR}/jbosstools-directory.xml" src="${UPSTREAM_DIRECTORY_XML}" />

	<xmlproperty file="${CORE_JBOSSTOOLS_TEMP_DIR}/jbosstools-directory.xml" keepRoot="false" semanticAttributes="true"/>
  <echo level="verbose">Extracted core JBoss tools discovery jar: ${entry.url}</echo>
  <!-- if entry.url is an absolute path with http and download.jboss.org/jbosstools/, we're fine; if not, need to convert relative path to absolute -->
  <if>
    <not>
      <and>
        <contains string="${entry.url}" substring="http"/>
        <contains string="${entry.url}" substring="download.jboss.org/jbosstools/"/>
      </and>
    </not>
    <then>
      <propertyregex override="true" property="entry.url" defaultvalue="${entry.url}" input="${UPSTREAM_DIRECTORY_XML}" regexp="(jbosstools|jbdevstudio|devstudio)-directory.xml" replace="${entry.url}"/>
      <echo level="verbose">Revised core JBoss tools discovery jar: ${entry.url}</echo>
    </then>
  </if>

	<!-- Create the Integration Stack directory XML file. -->
	<echo file="${project.build.directory}/plugins/${PREFIX}-directory.xml">&lt;?xml version='1.0' encoding='UTF-8'?>
&lt;directory xmlns="http://www.eclipse.org/mylyn/discovery/directory/">
&lt;entry url="${entry.url}" permitCategories="true"/>
&lt;entry url="${central.discovery.is.jar.renamed}" permitCategories="true"/>
&lt;/directory>
        </echo>
    </then></if>

  </target>

  <target name="cleanup">
    <delete dir="${tmpdir}" quiet="true" includeemptydirs="true" />
  </target>

</project>
